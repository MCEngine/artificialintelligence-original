plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

// Set project version using a property, defaulting to 'unspecified' if not found
version = '1.5.0-RELEASE'
group = 'io.github.mcengine'

ext {
    /* Name */
    user_git_name = System.getenv('USER_GIT_NAME') ?: 'null'
    git_user_token = System.getenv('USER_GITHUB_TOKEN') ?: 'null'

    organization_name = System.getenv('ORGANIZATION_NAME') ?: 'MCEngine'
    organization_token = System.getenv('ORGANIZATION_TOKEN') ?: 'null'

    repository_name = System.getenv('REPOSITORY_NAME') ?: 'artificialintelligence-original'
    repository_token = System.getenv('REPOSITORY_TOKEN') ?: 'null'

    /* Project Information */
    jarName = System.getenv('PROJECT_NAME') ?: 'MCEngineArtificialIntelligence'
}

allprojects {
    group = 'io.github.mcengine'

    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
        mavenLocal()

        // SpigotMC repository for Bukkit and Spigot dependencies
        maven {
            url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots'
            content {
                includeGroup 'org.bukkit'
                includeGroup 'org.spigotmc'
            }
        }

        // Additional Maven repositories
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://oss.sonatype.org/content/repositories/central' }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    // Disable default JAR task if necessary
    tasks.named('jar').configure {
        enabled = false
    }

    // Configure Shadow JAR plugin
    tasks.named('shadowJar').configure {
        archiveClassifier = null
    }

    afterEvaluate {
        def serverPlatforms = ['spigotmc',]
        serverPlatforms.each { platform ->
            if (project.path == ":server:${platform}:engine") {
                dependencies {
                    implementation project(path: ':mcengine-artificialintelligence-api', configuration: 'shadow')
                    implementation project(path: ':common', configuration: 'shadow')

                    def platformDir = rootProject.file("server/${platform}")
                    if (platformDir.exists()) {
                        platformDir.eachDir { versionDir ->
                            if (versionDir.name != 'engine') {
                                def versionPath = ":server:${platform}:${versionDir.name}"
                                implementation project(path: versionPath, configuration: 'shadow')
                            }
                        }
                    }
                }
            }
        }
    }

    // Publishing setup for mcengine-artificialintelligence-api
    if (project.name == 'mcengine-artificialintelligence-api') {
        apply plugin: 'maven-publish'

        publishing {
            repositories {
                maven {
                    name = 'GitHubPackages'
                    url = uri("https://maven.pkg.github.com/${project.organization_name}/${project.repository_name}")
                    credentials {
                        username = project.user_git_name
                        password = project.git_user_token ?: project.repository_token ?: project.organization_token
                    }
                }
            }
            publications {
                mavenJava(MavenPublication) {
                    artifact(tasks.named('shadowJar').get())

                    pom {
                        name = 'MCEnginebackpack'
                        url = "https://github.com/${project.organization_name}/${project.repository_name}"

                        scm {
                            connection = "scm:git:git://github.com/${project.organization_name}/${project.repository_name}.git"
                            developerConnection = "scm:git:ssh://github.com:${project.organization_name}/${project.repository_name}.git"
                            url = "https://github.com/${project.organization_name}/${project.repository_name}"
                        }

                        developers {
                            developer {
                                id = 'jetsadawijit'
                                name = 'Jetsada Wijit'
                                email = 'jetsadawijit@outlook.com'
                                url = 'https://jetsadawijit.github.io'
                            }
                        }
                    }
                }
            }
        }
    }
}

// Root project dependencies
dependencies {
    implementation project(path: ':mcengine-artificialintelligence-api', configuration: 'shadow')
    implementation project(path: ':common', configuration: 'shadow')

    def platformModules = ['spigotmc']
    platformModules.each { platform ->
        implementation project(path: ":server:${platform}:engine", configuration: 'shadow')
    }
}

// Root shadow JAR configuration
shadowJar {
    version = version
    archiveClassifier = null
    archiveBaseName = project.jarName
}

// Disable default JAR task if necessary
tasks.named('jar').configure {
    enabled = false
}

// Ensure build depends on shadow JAR
build.dependsOn(shadowJar)
