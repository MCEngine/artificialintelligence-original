package io.github.mcengine.common.artificialintelligence;

import io.github.mcengine.api.artificialintelligence.FunctionCallingLoader;
import io.github.mcengine.api.artificialintelligence.model.*;

import org.bukkit.plugin.Plugin;

public class MCEngineArtificialIntelligenceApi {

    private final IMCEngineArtificialIntelligenceApi ai;
    private final FunctionCallingLoader functionCallingLoader;

    public MCEngineArtificialIntelligenceApi(Plugin plugin) {
        // Load AI model
        String aiType = plugin.getConfig().getString("ai.type", "deepseek");
        switch (aiType.toLowerCase()) {
            case "custom" -> this.ai = new MCEngineArtificialIntelligenceApiCustomUrl(plugin);
            case "deepseek" -> this.ai = new MCEngineArtificialIntelligenceApiDeepSeek(plugin);
            case "openai" -> this.ai = new MCEngineArtificialIntelligenceApiOpenAi(plugin);
            case "openrouter" -> this.ai = new MCEngineArtificialIntelligenceApiOpenRouter(plugin);
            default -> throw new IllegalArgumentException("Unsupported AI type: " + aiType);
        }

        // Load FunctionCallingLoader for addon support
        this.functionCallingLoader = new FunctionCallingLoader(plugin);
    }

    /**
     * Sends a message to the AI and returns the AI's response.
     *
     * @param message The message or prompt to send to the AI.
     * @return The response generated by the AI model.
     */
    public String getResponse(String message) {
        return ai.getResponse(message);
    }

    public FunctionCallingLoader getFunctionCallingLoader() {
        return this.functionCallingLoader;
    }
}
